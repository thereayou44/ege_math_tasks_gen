"""
Файл с промптами для генераторов задач по математике.
Содержит промпты для Yandex API и локальной модели.
"""
# Системный промпт для Yandex API
SYSTEM_PROMPT = """Вы - опытный преподаватель математики, специализирующийся на подготовке к ЕГЭ. Вы создаете новые варианты задач, сохраняя при этом исходный уровень сложности и методы решения. 

- Ваши задачи должны быть очень похожи на примеры, но с другими числами. 
- Используйте только целые числа, простые дроби и корни из целых чисел.
- Ваши решения должны быть подробными и пошаговыми, с объяснением каждого действия.
- Задачи должны соответствовать уровню ЕГЭ по математике.
- Не создавайте тривиальные задачи типа "дано 2 угла треугольника - найдите третий".
- Преобразуйте задачи для уровня ЕГЭ, даже если исходная задача слишком простая.

Давайте точные и краткие ответы без лишних пояснений. Даже, если что-то не понятно в условии, то всё равно надо дать полный ответ - дополнительных пояснений не будет."""

# Системный промпт для hint_generator.py
HINT_SYSTEM_PROMPT = "Вы - опытный преподаватель математики, специализирующийся на подготовке к ЕГЭ. Ваша задача - давать последовательные, конкретные и полезные подсказки для решения задачи, привязанные к её условию и помогающие ученику продвинуться в решении. Подсказки должны содержать конкретные элементы из задачи (числа, переменные, функции). Формулируйте подсказки точно и без лишних отступлений."

# Словарь с готовыми инструкциями для подсказок разных уровней
HINT_PROMPTS = {
    0: """
---ПОДСКАЗКИ---
1. Для данного уровня подсказки не предусмотрены.
2. Для данного уровня подсказки не предусмотрены.
3. Для данного уровня подсказки не предусмотрены.
""",
    1: """
---ПОДСКАЗКИ---
[Уровень 1: Начальные подсказки. 
Первая подсказка должна обращать внимание на ключевую часть условия задачи или особенность вопроса (например, что требуется найти именно все решения, а не только положительные, или что требуется найти наибольшее значение функции именно на отрезке). Не следует разъяснять методы решения в первой подсказке.
Вторая подсказка должна содержать базовые понятия и самые необходимые формулы для решения, без лишних деталей.
Третья подсказка должна давать краткий план решения (1-2 предложения) или указание на первый шаг с минимальными деталями, оставляя ученику возможность самостоятельно решить задачу.]

1. [Подсказка на понимание условия задачи и определение специальных терминов. ОБЯЗАТЕЛЬНО: если в задаче упоминаются специальные математические методы или нетривиальные понятия (например, "вспомогательный угол", "метод рационализации", "параметризация" и т.д.), дайте их краткое определение и объясните суть метода. Например: "Метод вспомогательного угла - это способ решения тригонометрических уравнений вида a·sin x + b·cos x = c путем введения новых переменных sin α и cos α таких, что a = r·cos α, b = r·sin α, где r = √(a² + b²)". Также обратите внимание на ключевую часть условия задачи или особенность вопроса, не разъясняя пока методы решения.]
2. [Теоретическая подсказка, связанная с задачей (например: "Модуль числа равен самому числу, если оно неотрицательно, и противоположному числу, если оно отрицательно. Для уравнения с модулем нужно рассмотреть два случая" или "Логарифм определён только для положительных чисел, поэтому для нахождения области определения логарифмической функции необходимо определить, при каких значениях x подлогарифмическое выражение положительно")]

3. [Минимальная подсказка по решению, связанная со второй (например: "Для решения уравнения с модулем |2x - 3| = 5 сначала определите, при каких значениях x выражение 2x - 3 неотрицательно, а при каких отрицательно. Затем рассмотрите оба случая отдельно" или "Чтобы найти область определения функции f(x) = log₃(x²-4), решите неравенство x²-4 > 0, используя базовые свойства квадратичной функции")]
""",
    2: """
---ПОДСКАЗКИ---
[Уровень 2: Подсказки среднего уровня детализации. 
Первая подсказка должна четко указывать на ключевую часть условия и особенности вопроса, обращая внимание на то, что именно требуется найти или доказать.
Вторая подсказка должна содержать основные понятия и формулы для решения задачи, но без подробного объяснения как их применять.
Третья подсказка должна предлагать план решения без детализации вычислений, указывая основные этапы, которые нужно пройти для получения ответа.]

1. [Подсказка на понимание условия задачи и определение специальных терминов. ОБЯЗАТЕЛЬНО: если в задаче упоминаются специальные математические методы или нетривиальные понятия (например, "вспомогательный угол", "метод интервалов", "система независимых уравнений" и т.д.), дайте их четкое определение с краткими примерами использования. Например: "Метод вспомогательного угла - это преобразование выражения вида a·sin x + b·cos x = c к виду r·sin(x + α) = c или r·cos(x + α) = c, где r = √(a² + b²), а α - некоторый угол, который можно вычислить". Также четко указывайте на ключевую часть условия и особенности вопроса, обращая внимание на то, что именно требуется найти или доказать.]
2. [Теоретическая подсказка, связанная с задачей (например: "При решении уравнений с корнями нужно учитывать ОДЗ и возможное появление посторонних корней. Если возвести обе части уравнения в квадрат, могут появиться решения, не удовлетворяющие исходному уравнению" или "Для нахождения наибольшего значения функции на отрезке необходимо: 1) найти критические точки функции на интервале; 2) вычислить значения функции в этих точках и на концах отрезка; 3) выбрать наибольшее из них")]

3. [Более конкретная подсказка по решению, опирающаяся на вторую (например: "Для решения уравнения √(2x+1) - √(x-2) = 1 выполните следующие шаги: сначала найдите ОДЗ, затем перенесите один из корней в правую часть, возведите обе части в квадрат, решите получившееся уравнение и проверьте полученные корни подстановкой в исходное уравнение" или "Чтобы найти наибольшее значение функции f(x) = x³ - 3x² на отрезке [-1; 3], сначала найдите производную f'(x) и её нули на интервале (-1; 3), затем вычислите значения функции в этих точках и на концах отрезка [-1; 3], после чего выберите наибольшее")]
""",
    3: """
---ПОДСКАЗКИ---
[Уровень 3: Подробные подсказки. 
Первая подсказка должна дать полное понимание условия и требований задачи, точно указывая на то, что требуется найти, и на все важные ограничения в условии.
Вторая подсказка должна содержать все необходимые понятия, формулы и свойства, нужные для решения данной задачи, с кратким объяснением их применения.
Третья подсказка должна предоставлять развернутый план решения всей задачи с некоторыми вычислениями и промежуточными результатами, но без полной детализации всех шагов, оставляя часть вычислений ученику.]

1. [Подсказка на понимание условия задачи и определение специальных терминов. ОБЯЗАТЕЛЬНО: если в задаче упоминаются специальные математические методы или нетривиальные понятия, дайте их подробное определение с объяснением и примерами. Например: "Метод вспомогательного угла - это преобразование выражения вида a·sin x + b·cos x = c к виду r·sin(x + α) = c, где r = √(a² + b²), а угол α определяется из системы уравнений: a = r·cos α, b = r·sin α. Это позволяет свести исходное уравнение к более простому виду". Кроме того, дайте полное понимание условия и требований задачи, точно указывая на то, что требуется найти, и на все важные ограничения в условии.]
2. [Теоретическая подсказка, связанная с задачей (например: "Для решения логарифмического уравнения log₂(x+7) + log₂(x+1) = 3 можно использовать следующие свойства и формулы: 1) свойство суммы логарифмов: log_a(m) + log_a(n) = log_a(m·n); 2) формула перехода от логарифма к степени: log_a(b) = c эквивалентно b = aᶜ; 3) условие ОДЗ для логарифма: подлогарифмическое выражение должно быть положительно" или "Для решения неравенства с параметром (x²-4)/(x+a) ≤ 0 используются следующие свойства: 1) дробь меняет знак при изменении знака числителя или знаменателя, но не обоих сразу; 2) можно представить числитель как произведение (x+2)(x-2); 3) неравенство выполняется, когда числитель и знаменатель имеют разные знаки")]

3. [Подробная подсказка по решению, продолжающая вторую (например: "Для решения логарифмического уравнения log₂(x+7) + log₂(x+1) = 3 выполните следующие действия: 1) Используя свойство суммы логарифмов, запишите log₂((x+7)(x+1)) = 3; 2) По свойству равенства логарифмов, получаем (x+7)(x+1) = 2³ = 8; 3) Раскройте скобки и приведите к виду x² + 8x + 7 = 8, что преобразуется в квадратное уравнение x² + 8x - 1 = 0; 4) Решите это квадратное уравнение, используя формулу корней, и проверьте корни на принадлежность ОДЗ" или "Для анализа неравенства (x²-4)/(x+a) ≤ 0 действуйте следующим образом: 1) Представьте числитель в виде произведения (x+2)(x-2); 2) Определите, что знак числителя меняется в точках x = -2 и x = 2, а знак знаменателя в точке x = -a; 3) Рассмотрите различные случаи расположения точки -a относительно точек -2 и 2; 4) Для каждого случая определите, при каких значениях x неравенство выполняется, и сделайте вывод о существовании решений в зависимости от параметра a")]
""",
    4: """
---ПОДСКАЗКИ---
[Уровень 4: Детальные подсказки с вычислениями. 
Первая подсказка должна давать исчерпывающий анализ условия задачи, указывая на все ключевые аспекты и требования, а также на особенности формулировки вопроса.
Вторая подсказка должна предоставлять полную теоретическую базу для решения с детальным объяснением всех формул, свойств и методов, применимых к данной задаче.
Третья подсказка должна содержать подробный план решения всей задачи с большинством вычислений и промежуточных результатов, оставляя ученику лишь финальную проверку или вывод.]

1. [Подсказка на понимание условия задачи и определение специальных терминов. ОБЯЗАТЕЛЬНО: если в задаче упоминаются специальные математические методы или нетривиальные понятия, дайте их детальное определение с математическим обоснованием и примерами применения. Например: "Метод вспомогательного угла основан на тригонометрической формуле a·sin x + b·cos x = r·sin(x + α), где r = √(a² + b²) и α = arctan(b/a) для a > 0. Это преобразование можно доказать, воспользовавшись формулами синуса суммы: sin(x + α) = sin x · cos α + cos x · sin α. Если мы примем r·cos α = a и r·sin α = b, то получим требуемое равенство". Также давайте исчерпывающий анализ условия задачи, указывая на все ключевые аспекты и требования, а также на особенности формулировки вопроса.]
2. [Теоретическая подсказка, связанная с задачей (например: "Для решения тригонометрического уравнения 2sin²x - 5sinx + 2 = 0 используются следующие теоретические положения: 1) Метод замены переменной: если обозначить sinx = t, то уравнение примет вид 2t² - 5t + 2 = 0; 2) Формула дискриминанта квадратного уравнения D = b² - 4ac и формула корней t = (-b ± √D)/(2a); 3) Ограничение |sinx| ≤ 1, из которого следует, что не все значения t подходят; 4) Формулы для нахождения всех значений x на отрезке [0; 2π], при которых sinx = t: если t ∈ [-1, 1], то x = arcsin(t) + 2πn или x = π - arcsin(t) + 2πn, где n - целое число" или "Для нахождения наименьшего значения функции f(x) = 3x⁴ - 4x³ - 12x² + 5 используются следующие теоретические положения: 1) Необходимое условие экстремума: f'(x) = 0; 2) Достаточное условие минимума: f''(x) > 0; 3) Формула первой производной: f'(x) = 12x³ - 12x² - 24x; 4) Формула второй производной: f''(x) = 36x² - 24x - 24; 5) Критерий глобального минимума: значение функции в точке меньше, чем во всех остальных точках области определения")]

3. [Развернутая подсказка по решению, продолжающая вторую (например: "Решим тригонометрическое уравнение 2sin²x - 5sinx + 2 = 0 на отрезке [0; 2π]. 
1) Сделаем замену sinx = t и решим квадратное уравнение 2t² - 5t + 2 = 0.
   Дискриминант D = (-5)² - 4·2·2 = 25 - 16 = 9.
   Корни: t₁ = (5 + 3)/4 = 2, t₂ = (5 - 3)/4 = 1/2.
2) Проверим ограничение |sinx| ≤ 1. Значение t₁ = 2 не подходит, так как |2| > 1. Остается t₂ = 1/2.
3) Найдем все значения x из отрезка [0; 2π], при которых sinx = 1/2.
   Это x₁ = arcsin(1/2) = π/6 и x₂ = π - arcsin(1/2) = π - π/6 = 5π/6.
4) Проверим полученные решения подстановкой в исходное уравнение.
   При x = π/6: sin(π/6) = 1/2, подставляем в уравнение: 2·(1/2)² - 5·(1/2) + 2 = 2·0,25 - 2,5 + 2 = 0,5 - 2,5 + 2 = 0 ✓
   Аналогично для x = 5π/6. Итак, на отрезке [0; 2π] уравнение имеет два решения: x = π/6 и x = 5π/6. Проверьте второе решение самостоятельно" или "Найдем наименьшее значение функции f(x) = 3x⁴ - 4x³ - 12x² + 5.
1) Находим первую производную: f'(x) = 12x³ - 12x² - 24x = 12x(x² - x - 2).
2) Приравниваем к нулю: 12x(x² - x - 2) = 0, откуда x = 0 или x² - x - 2 = 0.
3) Решаем уравнение x² - x - 2 = 0: Дискриминант D = 1 + 8 = 9, корни x₁ = (1 + 3)/2 = 2, x₂ = (1 - 3)/2 = -1.
4) Получаем критические точки x = 0, x = 2, x = -1.
5) Находим вторую производную: f''(x) = 36x² - 24x - 24.
6) Проверяем знак второй производной в найденных точках:
   f''(0) = -24 < 0, значит в точке x = 0 функция имеет локальный максимум;
   f''(2) = 36·4 - 24·2 - 24 = 144 - 48 - 24 = 72 > 0, значит в точке x = 2 функция имеет локальный минимум;
   f''(-1) = 36 + 24 - 24 = 36 > 0, значит в точке x = -1 функция имеет локальный минимум.
7) Вычисляем значения функции в точках минимума:
   f(2) = 3·16 - 4·8 - 12·4 + 5 = 48 - 32 - 48 + 5 = -27;
   f(-1) = 3 - (-4) - 12 + 5 = 3 + 4 - 12 + 5 = 0.
8) Сравниваем значения и делаем вывод о наименьшем значении функции. Сделайте этот вывод самостоятельно")]
""",
    5: """
---ПОДСКАЗКИ---
[Уровень 5: Максимально детальные подсказки. 
1. [Подсказка на понимание условия задачи и определение специальных терминов. ОБЯЗАТЕЛЬНО: если в задаче упоминаются специальные математические методы или нетривиальные понятия, дайте их максимально полное определение с математическим выводом, историческими примечаниями и подробными примерами применения. Например: "Метод вспомогательного угла - это преобразование выражения вида a·sin x + b·cos x = c к виду r·sin(x + α) = c, где r = √(a² + b²), а α определяется двумя способами: 1) из системы a = r·cos α, b = r·sin α; 2) по формуле α = arctan(b/a) при a > 0. Докажем это преобразование: используя формулу синуса суммы sin(x + α) = sin x · cos α + cos x · sin α, имеем r·sin(x + α) = r·sin x · cos α + r·cos x · sin α. Если мы определим r·cos α = a и r·sin α = b, то получим a·sin x + b·cos x, что и требовалось доказать. Из системы уравнений r·cos α = a, r·sin α = b получаем r² = a² + b², откуда r = √(a² + b²)". Также содержите комплексный анализ условия задачи, рассматривая все его аспекты, нюансы формулировки и возможные интерпретации требований задачи.]Вторая подсказка должна предоставлять исчерпывающую теоретическую базу с подробным объяснением всех формул, методов и свойств, необходимых для решения, включая их вывод и обоснование применимости к данной задаче.
Третья подсказка должна давать детальное пошаговое решение всей задачи с подробными вычислениями, рассмотрением всех случаев и анализом результатов, оставляя ученику лишь минимальную самостоятельную работу по подсчеты или финальному оформлению ответа.]

1. [Подсказка на понимание условия задачи (например: "В задаче по стереометрии требуется найти объем пирамиды SABC. Внимательно проанализируем условие: 1) точка S с координатами (0, 0, 3) - вершина пирамиды; 2) точки A(2, 0, 0), B(0, 4, 0), C(5, 6, 0) - вершины треугольника ABC, который является основанием пирамиды; 3) основание лежит в плоскости Oxy (все точки основания имеют z-координату равную 0); 4) высота пирамиды равна 3 (это z-координата вершины S); 5) требуется найти именно объем, а не площадь поверхности или другую характеристику пирамиды" или "В задаче по теории вероятностей требуется найти вероятность того, что среди 4 случайно отобранных деталей будет хотя бы одна некачественная. Проанализируем условие: 1) вероятность того, что одна деталь не пройдет контроль качества, равна 0,02; 2) отбор деталей происходит случайно и независимо; 3) событие 'хотя бы одна некачественная деталь' включает в себя случаи, когда некачественных деталей 1, 2, 3 или 4; 4) нас интересует вероятность события 'хотя бы одна некачественная', а не точное количество некачественных деталей")]

2. [Теоретическая подсказка, связанная с задачей (например: "Для нахождения объема пирамиды SABC используются следующие формулы и теоретические положения:
1) Формула объема пирамиды: V = (1/3)·S₀·h, где S₀ - площадь основания, h - высота пирамиды.
2) Формула площади треугольника через векторное произведение: S₀ = (1/2)|AB × AC|, где AB и AC - векторы, идущие из точки A в точки B и C соответственно.
3) Формула вычисления векторного произведения:
   AB × AC = (AB₂·AC₃ - AB₃·AC₂, AB₃·AC₁ - AB₁·AC₃, AB₁·AC₂ - AB₂·AC₁).
4) Модуль вектора (x, y, z) равен √(x² + y² + z²).
5) Вектор из точки P(x₁, y₁, z₁) в точку Q(x₂, y₂, z₂) имеет координаты PQ = (x₂-x₁, y₂-y₁, z₂-z₁).
6) Высота пирамиды h в данном случае равна z-координате точки S, то есть h = 3" 
или "Для решения задачи по теории вероятностей используются следующие формулы и теоретические положения:
1) Вероятность противоположного события: P(A) = 1 - P(Ā), где Ā - событие, противоположное A.
2) Независимость событий: события независимы, если P(A∩B) = P(A)·P(B).
3) Формула вероятности сложного события 'все детали качественные' при независимых испытаниях: P(все качественные) = q⁴, где q = 1 - p - вероятность того, что одна деталь качественная, p - вероятность того, что одна деталь некачественная.
4) Формула Бернулли для вероятности ровно k успехов в n независимых испытаниях: P(k) = C(n,k)·pᵏ·q^(n-k), где C(n,k) = n!/(k!·(n-k)!) - число сочетаний из n по k.")]

3. [Детальная подсказка по решению с пошаговыми вычислениями (например: "Найдем объем пирамиды SABC.
Шаг 1: Определим векторы AB и AC по координатам точек:
   AB = B - A = (0, 4, 0) - (2, 0, 0) = (-2, 4, 0)
   AC = C - A = (5, 6, 0) - (2, 0, 0) = (3, 6, 0)

Шаг 2: Найдем векторное произведение AB × AC:
   AB × AC = (AB₂·AC₃ - AB₃·AC₂, AB₃·AC₁ - AB₁·AC₃, AB₁·AC₂ - AB₂·AC₁) = 
   = (4·0 - 0·6, 0·3 - (-2)·0, (-2)·6 - 4·3) = (0, 0, -12 - 12) = (0, 0, -24)

Шаг 3: Найдем модуль полученного вектора:
   |AB × AC| = |(0, 0, -24)| = √(0² + 0² + (-24)²) = √576 = 24

Шаг 4: Вычислим площадь треугольника ABC:
   S₀ = (1/2)|AB × AC| = (1/2)·24 = 12

Шаг 5: Вычислим объем пирамиды:
   V = (1/3)·S₀·h = (1/3)·12·3 = 12

Таким образом, объем пирамиды SABC равен 12 кубических единиц. Для проверки можно разбить пирамиду на три треугольные пирамиды с общей вершиной S и основаниями в виде треугольников AOB, BOC и AOC, где O - начало координат, и вычислить их объемы отдельно. Выполните эту проверку самостоятельно" или "Решим задачу по теории вероятностей.
Шаг 1: Обозначим через p вероятность того, что одна деталь некачественная, p = 0,02.
Шаг 2: Вероятность того, что одна деталь качественная, q = 1 - p = 1 - 0,02 = 0,98.
Шаг 3: Обозначим через A событие 'хотя бы одна деталь некачественная', а через Ā событие 'все 4 детали качественные'.
Шаг 4: По формуле вероятности противоположного события: P(A) = 1 - P(Ā).
Шаг 5: Используя формулу для независимых испытаний:
   P(Ā) = q⁴ = 0,98⁴ = 0,98 · 0,98 · 0,98 · 0,98 ≈ 0,922.
Шаг 6: Находим искомую вероятность:
   P(A) = 1 - P(Ā) = 1 - 0,922 = 0,078.

Таким образом, вероятность того, что среди 4 случайно отобранных деталей будет хотя бы одна некачественная, равна примерно 0,078 или 7,8%. 

Для проверки можно также вычислить эту вероятность другим способом, используя формулу полной вероятности и рассматривая события 'ровно k некачественных деталей' для k от 1 до 4. Выполните эту проверку самостоятельно")]
"""
}


# Промпт для генерации полного материала с YandexGPT API
def create_complete_task_prompt(category, subcategory, original_task, original_solution, difficulty_level=3):
    """
    Создает промпт для генерации полного учебного материала.
    
    Args:
        category: Категория задачи
        subcategory: Подкатегория задачи
        original_task: Текст исходной задачи
        original_solution: Решение исходной задачи
        difficulty_level: Уровень подсказок (1-5, где 1 - минимальные, 5 - очень подробные)
        
    Returns:
        str: Промпт для генерации
    """
    # Получаем инструкции для подсказок соответствующего уровня
    hint_instructions = HINT_PROMPTS.get(difficulty_level, "")
    
    # Описание уровня подсказок для промпта
    hint_descriptions = {
        1: "минимальные, указывающие только на конкретные элементы задачи без методов решения",
        2: "краткие, указывающие на конкретный метод решения с привязкой к данным задачи",
        3: "средние, с указанием ключевых формул и начальных шагов вычислений для данной задачи",
        4: "подробные, с детальными шагами решения и числовыми вычислениями",
        5: "максимально подробные, включающие пошаговое решение почти до финального ответа"
    }
    hint_description = hint_descriptions.get(difficulty_level, "средние")
    
    # Определяем, нужно ли добавлять запрос о генерации параметров для изображения
    image_prompt = ""
    
    # Проверяем, требуется ли визуализация для данной задачи
    is_visualization_required = check_visualization_requirement(category, subcategory, original_task)
    
    if is_visualization_required:
        image_prompt = """
---ПАРАМЕТРЫ ДЛЯ ВИЗУАЛИЗАЦИИ---
ВАЖНО: Вы должны самостоятельно определить, нужна ли визуализация для данной задачи.

ОБРАТИТЕ ВНИМАНИЕ! Визуализацию следует создавать, если она нужна, НЕЗАВИСИМО от того, базовый или профильный уровень задачи.

Внимательно проанализируйте условие задачи и определите, требуется ли визуальное представление для понимания или решения задачи.

ВОПРОСЫ ДЛЯ ОПРЕДЕЛЕНИЯ НЕОБХОДИМОСТИ ВИЗУАЛИЗАЦИИ:
1. Упоминается ли в задаче график функции, геометрическая фигура или координатная плоскость?
2. Содержит ли задача фразы "на рисунке", "на графике", "изображен", "показан"?
3. Необходимо ли визуальное представление для понимания и решения задачи?

Если вы ответили "НЕТ" на все вопросы, НЕ СОЗДАВАЙТЕ параметры для визуализации. Вместо этого напишите "Визуализация не требуется" и не добавляйте никаких параметров.

Если вы ответили "ДА" хотя бы на один вопрос, укажите параметры в следующем формате:

Тип: [график, треугольник, окружность, прямоугольник, трапеция, параллелограмм, координатная_плоскость]

Для графика функции:
Количество функций: [указать от 1 до 4]
Функция 1: [математическое выражение, например: x^2 - 3*x + 2, sin(x), sqrt(x)]
Цвет 1: [цвет для первой функции, например: синий, красный, зеленый]
Название 1: [название или обозначение для первой функции, например: f(x), y, g(x)]
Функция 2: [математическое выражение для второй функции] (если есть)
Цвет 2: [цвет для второй функции] (если есть)
Название 2: [название для второй функции] (если есть)
Функция 3: [математическое выражение для третьей функции] (если есть)
Цвет 3: [цвет для третьей функции] (если есть)
Название 3: [название для третьей функции] (если есть)
Функция 4: [математическое выражение для четвертой функции] (если есть)
Цвет 4: [цвет для четвертой функции] (если есть)
Название 4: [название для четвертой функции] (если есть)
Диапазон X: [-10, 10] или другой подходящий диапазон
Диапазон Y: [автоматический или указать конкретные значения]
Особые точки: [(x1,y1,метка1), (x2,y2,метка2), ...] - координаты особых точек, если они есть

ПРИМЕРЫ для графиков:

1. Задача с анализом графика функции с особыми точками на оси X:
Тип: график
Количество функций: 1
Функция 1: x^3 - 6*x^2 + 9*x - 4
Цвет 1: синий
Название 1: f(x)
Диапазон X: [-2, 8]
Диапазон Y: [-5, 5]
Особые точки: (-1,0,a), (1,0,b), (3,0,c), (5,0,d), (7,0,e)

2. Две функции с точками пересечения:
Тип: график
Количество функций: 2
Функция 1: x^2 - 4
Цвет 1: синий
Название 1: f(x)
Функция 2: x + 2
Цвет 2: красный
Название 2: g(x)
Диапазон X: [-5, 5]
Диапазон Y: [-5, 5]
Особые точки: (-2,0,A), (2,0,B), (-2,-4,C), (2,4,D)

Для треугольника:
Координаты: [(x1,y1), (x2,y2), (x3,y3)] - координаты вершин
Показать углы: [да/нет] - подписывать ли все значения углов
Показать стороны: [да/нет] - подписывать ли все длины сторон
Метки вершин: [A,B,C или другие метки] - какие метки использовать для вершин
Рисовать дуги углов: [да/нет] - рисовать ли дуги на углах
Показать конкретные углы: [список меток вершин, например: A,C] - подписывать только указанные углы
Показать конкретные стороны: [список сторон, например: AB,BC] - подписывать длины только указанных сторон
Показать высоты: [да/нет] - показывать ли все высоты треугольника
Показать конкретные высоты: [список меток вершин, например: A,B] - из каких вершин показать высоты
Показать медианы: [да/нет] - показывать ли все медианы треугольника
Показать конкретные медианы: [список меток вершин, например: A,C] - из каких вершин показать медианы
Показать средние линии: [да/нет] - показывать ли все средние линии треугольника
Показать конкретные средние линии: [список сторон, например: AB,BC] - какие средние линии показать

Для окружности:
Центр: [(x,y)]
Радиус: [число]
Показать радиус: [да/нет] - отображать ли линию радиуса
Показать диаметр: [да/нет] - отображать ли линию диаметра
Показать центр: [да/нет] - подписывать ли центр
Показать хорду: [да/нет] - отображать ли хорду
Значение радиуса: [число] - значение для отображения (может отличаться от фактического)
Значение диаметра: [число] - значение для отображения (может отличаться от фактического)
Значение хорды: [число] - значение для отображения

Для прямоугольника/параллелограмма/трапеции:
Размеры: [ширина, высота]
Метки вершин: [A,B,C,D]
Показать углы: [да/нет] - подписывать ли значения углов
Показать стороны: [да/нет] - подписывать ли размеры
Рисовать дуги углов: [да/нет] - рисовать ли дуги на углах
Показать конкретные углы: [список меток вершин, например: A,C] - подписывать только указанные углы
Показать конкретные стороны: [список сторон, например: AB,CD] - подписывать длины только указанных сторон

ВАЖНО:
1. Подписывайте ТОЛЬКО те элементы, которые действительно важны для задачи!
2. Если задача не требует знания значений углов, не указывайте "Показать углы: да".
3. Если не требуется визуализация дуг углов, укажите "Рисовать дуги углов: нет".
4. Когда нужно показать только некоторые элементы (стороны, углы, высоты и т.д.), 
   используйте параметры "Показать конкретные..." вместо общих параметров "Показать...".
5. Для угла A подразумевается угол при вершине A, для стороны AB - сторона между вершинами A и B.

ВАЖНО:
1. Генерируйте параметры ТОЛЬКО если задача действительно требует визуального представления
2. Параметры должны точно соответствовать условию задачи
3. Если задача содержит конкретные числа, координаты, функции - используйте именно их
4. Если в задаче рассматривается несколько функций (от 1 до 4), ОБЯЗАТЕЛЬНО укажите каждую из них с соответствующими параметрами

{hint_instructions}
{image_prompt}"""

    return prompt

def check_visualization_requirement(category, subcategory, task_text):
    """
    Функция больше не определяет необходимость визуализации на основе ключевых слов,
    а просто возвращает True, чтобы предоставить модели промпт для самостоятельного решения
    о необходимости визуализации. 
    
    Теперь модель сама определяет, нужна ли визуализация для задачи, и генерирует
    соответствующие параметры только если считает это необходимым.
    
    Args:
        category: Категория задачи
        subcategory: Подкатегория задачи
        task_text: Текст задачи
        
    Returns:
        bool: Всегда True, чтобы предоставить промпт модели
    """
    # Всегда возвращаем True, чтобы включить промпт для модели
    return True

# Промпты для локальной модели
LOCAL_SYSTEM_PROMPT = "Ты - опытный преподаватель математики, помогающий готовиться к ЕГЭ."

# Промпт для генерации новой задачи
def create_new_task_prompt(original_task, original_solution, category, subcategory=""):
    """
    Создает промпт для генерации новой задачи на основе оригинальной.
    
    Args:
        original_task: Текст оригинальной задачи
        original_solution: Решение оригинальной задачи
        category: Категория задачи
        subcategory: Подкатегория задачи (опционально)
        
    Returns:
        str: Промпт для генерации
    """
    return f"""
Сгенерируй новую математическую задачу из ЕГЭ по категории "{category}" 
{"и подкатегории " + subcategory if subcategory else ""}, похожую на данную:

Исходная задача: {original_task}

Исходное решение: {original_solution}

ВАЖНО: Строго сохраняй тип и основные элементы исходной задачи:
1. Если в исходной задаче есть модуль - новая задача ОБЯЗАТЕЛЬНО должна содержать модуль.
2. Если это логарифмическое уравнение - новая задача должна быть логарифмическим уравнением.
3. Если это задача на применение производной - сохрани этот контекст.
4. НЕ МЕНЯЙ тип и ключевые элементы задачи, меняй только числа и условия.

Примеры правильной замены:
✓ Было: "Решите уравнение log₃(x+2) + log₃(x-1) = 1". Стало: "Решите уравнение log₂(x+3) + log₂(x-2) = 2".
✓ Было: "Найдите площадь фигуры, ограниченной графиком функции y = x² - 4 и осью Ox". Стало: "Найдите площадь фигуры, ограниченной графиком функции y = x² - 9 и осью Ox".

ВАЖНО О ЧИСЛАХ: Подбирай числа так, чтобы получался "красивый" и удобный для ученика ответ:
1. Предпочтительны целые числа или простые дроби (1/2, 3/4, 2/3).
2. Избегай громоздких выражений вида log₂(123 + √5445) + 2/5.
3. Корни лучше подбирать из квадратов целых чисел (√4, √9, √16).
4. Тригонометрические ответы по возможности выражай через π (π/3, π/6, 3π/4).

Примеры:
✓ Хороший ответ: 7
✗ Плохой ответ: 7,42856...
✓ Хороший ответ: π/6
✗ Плохой ответ: 0,5236...

Создай новый вариант этой задачи, изменив числовые параметры, условия или сюжет, 
но сохраняя подобный уровень сложности и метод решения. 
Убедись, что задача имеет корректное решение и выполнима.
Математические формулы запиши в формате LaTeX между символами $$...$$

Новая задача:
"""

# Промпт для генерации решения
def create_solution_prompt(task):
    """
    Создает промпт для генерации решения задачи.
    
    Args:
        task: Текст задачи
        
    Returns:
        str: Промпт для генерации
    """
    return f"""
Решите следующую математическую задачу из ЕГЭ:

{task}

ВАЖНО О РЕШЕНИИ:
1. Предоставьте полное пошаговое решение с пояснениями.
2. Разделите решение на логические этапы.
3. Объясняйте каждый шаг, особенно при применении формул и теорем.

Пример хорошего решения для задачи "Решите уравнение log₂(x+3) - log₂(x-2) = 3":
"Шаг 1: Используем свойство разности логарифмов: log₂(x+3) - log₂(x-2) = log₂((x+3)/(x-2)).
Шаг 2: Подставляем в исходное уравнение: log₂((x+3)/(x-2)) = 3.
Шаг 3: Переходим от логарифма к степени: (x+3)/(x-2) = 2³ = 8.
Шаг 4: Умножаем обе части на (x-2): x+3 = 8(x-2).
Шаг 5: Раскрываем скобки: x+3 = 8x-16.
Шаг 6: Приводим подобные: x+3-8x+16 = 0; -7x+19 = 0.
Шаг 7: Выражаем x: -7x = -19; x = 19/7 ≈ 2,71.
Шаг 8: Проверяем ОДЗ: x-2 > 0, то есть x > 2. Наше решение удовлетворяет ОДЗ."

ВАЖНО О ЧИСЛАХ: Стремитесь к красивым и понятным ответам:
1. Предпочтительны целые числа или простые дроби (1/2, 3/4, 2/3).
2. По возможности упрощайте корни (√8 → 2√2).
3. Тригонометрические ответы лучше выражать через π (π/3, π/6).
4. Логарифмы в ответах по возможности вычисляйте до целых или простых дробей.

Примеры упрощения:
✓ √12 = 2√3 (упрощено)
✗ √12 = 3,464... (не упрощено)
✓ log₂(8) = 3 (вычислено)
✗ log₂(8) (не вычислено)
✓ sin(π/6) = 1/2 (вычислено)
✗ sin(π/6) ≈ 0,5 (неточно вычислено)

Математические формулы запишите в формате LaTeX между символами $$...$$
В конце обязательно укажите итоговый ответ в наиболее упрощенной форме.

Решение:
"""

# Промпт для генерации подсказок
def create_hints_prompt(task, solution, difficulty_level=3):
    """
    Создает промпт для генерации подсказок.
    
    Args:
        task: Текст задачи
        solution: Полное решение задачи
        difficulty_level: Уровень сложности подсказок (1-5)
        
    Returns:
        str: Промпт для генерации
    """
    # Преобразуем уровень сложности в описание для промпта
    hint_description = {
        1: "минимальные подсказки, но всё равно относящиеся к конкретной задаче",
        2: "краткие подсказки с указанием конкретного метода для этой задачи",
        3: "подробные подсказки среднего уровня с указанием формул и начальных шагов конкретно для этой задачи (3-5 предложений)",
        4: "развернутые подсказки с конкретными вычислениями и значениями из задачи (4-6 предложений)",
        5: "максимально подробное пошаговое решение из нескольких абзацев, практически полностью раскрывающее ответ"
    }.get(difficulty_level, "средние подсказки")

    return f"""
Создайте 3 последовательные подсказки для решения конкретной математической задачи ЕГЭ:

Задача: {task}

Полное решение: {solution}

Уровень подсказок: {difficulty_level} (по шкале от 1 до 5)

ВАЖНО: Избегайте общих рекомендаций! Используйте КОНКРЕТНЫЕ элементы из задачи (числа, переменные, функции). 
НЕ ДАВАЙТЕ подсказки вида "подумайте о применении теоремы Виета" или "используйте метод интервалов" - вместо этого привязывайте подсказки к конкретным данным задачи!

Требуется создать {hint_description}.
Чем выше число (от 1 до 5), тем более подробными должны быть подсказки:
- Уровень 1: минимальные подсказки, но с упоминанием конкретных значений из задачи
  Пример: "Обратите внимание на числа 3 и 7 в уравнении" вместо "Посмотрите на коэффициенты в уравнении"
- Уровень 3: подробные подсказки из 3-5 предложений с конкретными шагами
- Уровень 5: почти полное решение с конкретными вычислениями, разбитое на несколько абзацев

ВАЖНО О КОЛИЧЕСТВЕ ТЕКСТА:
- Для уровней 1-2: короткие подсказки из 1-2 предложений 
- Для уровней 3-4: развернутые подсказки из 3-6 предложений
- Для уровня 5: полноценные абзацы с подробными объяснениями и вычислениями

Примеры ХОРОШИХ подсказок для задачи "$x^2 - 5x + 6 = 0$":
- Уровень 1: "Обратите внимание, что коэффициенты уравнения $x^2 - 5x + 6 = 0$ позволяют разложить левую часть на множители" (конкретная задача и намек)
- Уровень 3: "Для уравнения $x^2 - 5x + 6 = 0$ найдите корни. Используя теорему Виета, получаем, что их сумма равна 5, а произведение равно 6. Эти корни можно подобрать, перебирая числа, произведение которых равно 6, а сумма равна 5. Попробуйте числа 2 и 3, их произведение $2 \cdot 3 = 6$, а сумма $2 + 3 = 5$." (формулы и начальные шаги с детальным объяснением)
- Уровень 5: "Шаг 1: Разложим квадратный трехчлен $x^2 - 5x + 6$ на множители. Найдем числа, сумма которых равна -5, а произведение равно 6. Это числа -2 и -3. 
  
  Шаг 2: Запишем разложение трехчлена: $x^2 - 5x + 6 = (x - 2)(x - 3) = 0$. 
  
  Шаг 3: Отсюда получаем систему $x - 2 = 0$ или $x - 3 = 0$, значит $x = 2$ или $x = 3$. Проверим оба корня подстановкой в исходное уравнение..." (детальные шаги с разбивкой на абзацы)

Подсказки должны создавать последовательную цепочку, раскрывая ход решения:
1. Первая подсказка: начальное наблюдение или первый шаг, привязанный к конкретным элементам задачи
2. Вторая подсказка: существенное продвижение в решении с формулами и конкретными значениями
3. Третья подсказка: предпоследний шаг решения, оставляющий ученику минимальную работу

Подсказки (разделенные ###):
"""

# Промпт для визуализации геометрических фигур и графиков
VISUALIZATION_FORMATS = {
    "triangle": {
        "description": "Треугольник с настраиваемыми параметрами.",
        "parameters": {
            "points": "Координаты вершин в формате [(x1,y1), (x2,y2), (x3,y3)]",
            "vertex_labels": "Метки вершин, например ['A', 'B', 'C']",
            "show_labels": "Показывать ли метки вершин (True/False)",
            "show_angles": "Показывать ли углы (True/False)",
            "is_right": "Является ли треугольник прямоугольным (True/False)",
            "side_lengths": "Длины сторон для отображения [сторона1, сторона2, сторона3] или None для сторон, которые не нужно отображать"
        }
    },
    "rectangle": {
        "description": "Прямоугольник с настраиваемыми параметрами.",
        "parameters": {
            "x": "Координата x левого нижнего угла",
            "y": "Координата y левого нижнего угла",
            "width": "Ширина прямоугольника",
            "height": "Высота прямоугольника",
            "vertex_labels": "Метки вершин, например ['A', 'B', 'C', 'D']",
            "show_labels": "Показывать ли метки вершин (True/False)",
            "show_lengths": "Показывать ли длины сторон (True/False)",
            "show_angles": "Показывать ли углы (True/False)",
            "side_lengths": "Длины сторон для отображения [сторона1, сторона2, сторона3, сторона4] или None для сторон, которые не нужно отображать"
        }
    },
    "parallelogram": {
        "description": "Параллелограмм с настраиваемыми параметрами.",
        "parameters": {
            "x": "Координата x левого нижнего угла",
            "y": "Координата y левого нижнего угла",
            "width": "Ширина параллелограмма (нижнее основание)",
            "height": "Высота параллелограмма",
            "skew": "Угол наклона в градусах",
            "vertex_labels": "Метки вершин, например ['A', 'B', 'C', 'D']",
            "show_labels": "Показывать ли метки вершин (True/False)",
            "show_lengths": "Показывать ли длины сторон (True/False)",
            "show_angles": "Показывать ли углы (True/False)",
            "side_lengths": "Длины сторон для отображения [сторона1, сторона2, сторона3, сторона4] или None для сторон, которые не нужно отображать"
        }
    },
    "trapezoid": {
        "description": "Трапеция с настраиваемыми параметрами.",
        "parameters": {
            "x": "Координата x левого нижнего угла",
            "y": "Координата y левого нижнего угла",
            "bottom_width": "Ширина нижнего основания",
            "top_width": "Ширина верхнего основания",
            "height": "Высота трапеции",
            "vertex_labels": "Метки вершин, например ['A', 'B', 'C', 'D']",
            "show_labels": "Показывать ли метки вершин (True/False)",
            "show_lengths": "Показывать ли длины сторон (True/False)",
            "show_angles": "Показывать ли углы (True/False)",
            "side_lengths": "Длины сторон для отображения [сторона1, сторона2, сторона3, сторона4] или None для сторон, которые не нужно отображать"
        }
    },
    "circle": {
        "description": "Окружность с настраиваемыми параметрами.",
        "parameters": {
            "center": "Координаты центра окружности в формате (x, y)",
            "radius": "Радиус окружности",
            "center_label": "Метка центра, например 'O'",
            "show_center": "Показывать ли центр (True/False)",
            "show_radius": "Показывать ли радиус (True/False)",
            "show_diameter": "Показывать ли диаметр (True/False)",
            "show_chord": "Показывать ли хорду (True/False)",
            "radius_value": "Значение радиуса для отображения (может отличаться от фактического)",
            "diameter_value": "Значение диаметра для отображения (может отличаться от фактического)",
            "chord_value": "Значение хорды для отображения"
        }
    }
}

# Параметры по умолчанию для фигур
DEFAULT_VISUALIZATION_PARAMS = {
    "triangle": {
        "points": [(0,0), (4,0), (2,3)],
        "show_labels": True,
        "vertex_labels": ["A", "B", "C"],
        "show_angles": False,
        "is_right": False
    },
    "rectangle": {
        "x": 0,
        "y": 0,
        "width": 4,
        "height": 3,
        "show_labels": True,
        "vertex_labels": ["A", "B", "C", "D"],
        "show_lengths": False,
        "show_angles": False
    },
    "parallelogram": {
        "x": 0,
        "y": 0,
        "width": 4,
        "height": 3,
        "skew": 60,
        "show_labels": True,
        "vertex_labels": ["A", "B", "C", "D"],
        "show_lengths": False,
        "show_angles": False
    },
    "trapezoid": {
        "x": 0,
        "y": 0,
        "bottom_width": 6,
        "top_width": 3,
        "height": 3,
        "show_labels": True,
        "vertex_labels": ["A", "B", "C", "D"],
        "show_lengths": False,
        "show_angles": False
    },
    "circle": {
        "center": (0, 0),
        "radius": 3,
        "center_label": "O",
        "show_center": True,
        "show_radius": False,
        "show_diameter": False
    }
}

# Шаблоны регулярных выражений для извлечения параметров из текста
REGEX_PATTERNS = {
    "generic": {
        "type": r'Тип изображения[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "shape_type": r'Тип[^:]*:\s*["\']?([^"\'\n]+)["\']?', 
    },
    "triangle": {
        "coords": r'Координаты вершин[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angles": r'Показать углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "lengths": r'Показать стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "vertex_labels": r'Метки вершин[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "is_right": r'Прямоугольный[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "side_lengths": r'Длины сторон[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angle_values": r'Значения углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_angle_arcs": r'Рисовать дуги углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_angles": r'Показать конкретные углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_sides": r'Показать конкретные стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_heights": r'Показать высоты[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_heights": r'Показать конкретные высоты[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_medians": r'Показать медианы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_medians": r'Показать конкретные медианы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_midlines": r'Показать средние линии[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_midlines": r'Показать конкретные средние линии[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "rectangle": {
        "dimensions": r'Размеры[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "coords": r'Координаты[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "vertex_labels": r'Метки вершин[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_dimensions": r'Показать размеры[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_labels": r'Показать метки[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "side_lengths": r'Длины сторон[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_angles": r'Показать углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angle_values": r'Значения углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_angle_arcs": r'Рисовать дуги углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_angles": r'Показать конкретные углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_sides": r'Показать конкретные стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_lengths": r'Показать стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_specific_angles": r'Показать конкретные углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_specific_sides": r'Показать конкретные стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "parallelogram": {
        "dimensions": r'Размеры[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "coords": r'Координаты[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "vertex_labels": r'Метки вершин[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_dimensions": r'Показать размеры[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_labels": r'Показать метки[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "skew_angle": r'Наклон[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "side_lengths": r'Длины сторон[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_angles": r'Показать углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angle_values": r'Значения углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_angle_arcs": r'Рисовать дуги углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_angles": r'Показать конкретные углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_sides": r'Показать конкретные стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_lengths": r'Показать стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_specific_angles": r'Показать конкретные углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_specific_sides": r'Показать конкретные стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "trapezoid": {
        "dimensions": r'Размеры[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "coords": r'Координаты[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "vertex_labels": r'Метки вершин[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_dimensions": r'Показать размеры[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_labels": r'Показать метки[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "top_width": r'Верхняя база[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "side_lengths": r'Длины сторон[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_angles": r'Показать углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angle_values": r'Значения углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_angle_arcs": r'Рисовать дуги углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_angles": r'Показать конкретные углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "specific_sides": r'Показать конкретные стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_lengths": r'Показать стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_specific_angles": r'Показать конкретные углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_specific_sides": r'Показать конкретные стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "circle": {
        "center": r'Центр[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "radius": r'Радиус[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "center_label": r'Метка центра[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_radius": r'Показать радиус[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_diameter": r'Показать диаметр[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_chord": r'Показать хорду[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "radius_value": r'Значение радиуса[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "diameter_value": r'Значение диаметра[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "chord_value": r'Значение хорды[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "graph": {
        "function": r'Функция[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "x_range": r'Диапазон X[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "y_range": r'Диапазон Y[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "functions": r'Функции[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "num_functions": r'Количество функций[^:]*:\s*["\']?(\d+)["\']?',
        "function_1": r'Функция 1[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "function_2": r'Функция 2[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "function_3": r'Функция 3[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "function_4": r'Функция 4[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "color_1": r'Цвет 1[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "color_2": r'Цвет 2[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "color_3": r'Цвет 3[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "color_4": r'Цвет 4[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "name_1": r'Название 1[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "name_2": r'Название 2[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "name_3": r'Название 3[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "name_4": r'Название 4[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "special_points": r'Особые точки[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "special_points_coords": r'Координаты особых точек[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "coordinate": {
        "points": r'Точки[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "vectors": r'Векторы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "functions": r'Функции[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    }
} 