"""
Файл с промптами для генераторов задач по математике.
Содержит промпты для Yandex API и локальной модели.
"""

#############################################################
# 1. СИСТЕМНЫЕ ПРОМПТЫ
#############################################################

# Системный промпт для Yandex API
SYSTEM_PROMPT = """Вы - опытный преподаватель математики, специализирующийся на подготовке к ЕГЭ. Вы создаете новые варианты задач, сохраняя при этом исходный уровень сложности и методы решения. 

- Ваши задачи должны быть очень похожи на примеры, но с другими числами. 
- Используйте только целые числа, простые дроби и корни из целых чисел.
- Ваши решения должны быть подробными и пошаговыми, с объяснением каждого действия.
- Задачи должны соответствовать уровню ЕГЭ по математике.
- Создавайте задачи средней или высокой сложности, соответствующие кодификатору ЕГЭ.

Давайте точные и краткие ответы без лишних пояснений. Даже, если что-то не понятно в условии, то всё равно надо дать полный ответ - дополнительных пояснений не будет."""

# Системный промпт для hint_generator.py
HINT_SYSTEM_PROMPT = "Вы - опытный преподаватель математики, специализирующийся на подготовке к ЕГЭ. Ваша задача - давать последовательные, конкретные и полезные подсказки для решения задачи, привязанные к её условию и помогающие ученику продвинуться в решении. Подсказки должны содержать конкретные элементы из задачи (числа, переменные, функции). Формулируйте подсказки точно и без лишних отступлений."

#############################################################
# 2. ГЕНЕРАЦИЯ ЗАДАЧ
#############################################################

# Промпт для генерации полного материала с YandexGPT API
def create_complete_task_prompt(category, subcategory, original_task, difficulty_level=3, add_visualization=None):
    """
    Создает промпт для генерации полного учебного материала.
    
    Args:
        category: Категория задачи
        subcategory: Подкатегория задачи
        original_task: Текст исходной задачи
        difficulty_level: Уровень подсказок (1-5, где 1 - минимальные, 5 - очень подробные)
        add_visualization: Добавлять ли визуализацию (True/False)
        
    Returns:
        str: Промпт для генерации
    """
    # Получаем инструкции для подсказок соответствующего уровня
    hint_instructions = HINT_PROMPTS.get(difficulty_level, "")
    
    # Описание уровня подсказок для промпта
    hint_descriptions = {
        1: "минимальные, указывающие только на конкретные элементы задачи без методов решения",
        2: "краткие, указывающие на конкретный метод решения с привязкой к данным задачи",
        3: "средние, с указанием ключевых формул и начальных шагов вычислений для данной задачи",
        4: "подробные, с детальными шагами решения и числовыми вычислениями",
        5: "максимально подробные, включающие пошаговое решение почти до финального ответа"
    }
    hint_description = hint_descriptions.get(difficulty_level, "средние")
    
    # Определяем, нужно ли добавлять запрос о генерации параметров для изображения
    image_prompt = ""
    
    # Проверяем, требуется ли визуализация для данной задачи
    if add_visualization is None:
        # Если параметр не задан явно, определяем автоматически
        is_visualization_required = check_visualization_requirement(category, subcategory, original_task)
    else:
        # Используем переданное значение параметра
        is_visualization_required = add_visualization
    
    if is_visualization_required:
        image_prompt = """
---ПАРАМЕТРЫ ДЛЯ ВИЗУАЛИЗАЦИИ---
ВАЖНО: Определите автоматически, нужна ли визуализация для данной задачи. Это можно определять по словам "на рисунке изображен" или подобным.

Если визуализация НЕ требуется, напишите только "Визуализация не требуется" и не добавляйте никаких параметров.

Параметры для визуализации надо указывать ТОЛЬКО те, которые прямым текстом указаны в условии задачи.

Если визуализация требуется, укажите её тип и параметры в следующем формате:

Тип: [график, треугольник, окружность, прямоугольник, трапеция, параллелограмм, коорд)инатная_плоскость]

Для графика функции:
Количество функций: [указать от 1 до 4]
Функция 1: [математическое выражение, например: x^2 - 3*x + 2, sin(x), sqrt(x)]
Цвет 1: [цвет для первой функции]
Название 1: [название или обозначение для первой функции]
Функция 2: [математическое выражение для второй функции] (если есть)
Цвет 2: [цвет для второй функции] (если есть)
Название 2: [название для второй функции] (если есть)
Функция 3: [математическое выражение для третьей функции] (если есть)
Цвет 3: [цвет для третьей функции] (если есть)
Название 3: [название для третьей функции] (если есть)
Функция 4: [математическое выражение для четвертой функции] (если есть)
Цвет 4: [цвет для четвертой функции] (если есть)
Название 4: [название для четвертой функции] (если есть)
Диапазон X: [-10, 10] или другой подходящий диапазон
Диапазон Y: [автоматический или указать конкретные значения]
Особые точки: [(x1,y1,метка1), (x2,y2,метка2), ...] - координаты особых точек, если они есть

Для треугольника:
Метки вершин: [A,B,C или другие метки]
Стороны: [длина1, длина2, длина3] - длины сторон
Углы: [угол1, угол2, угол3] - величины углов в градусах 
Показать высоты: [из каких вершин, например: A,B]
Показать медианы: [из каких вершин, например: A,C]
Показать средние линии: [какие, например: AB,BC]

Для окружности:
Радиус: [число]
Значение радиуса: [число для отображения]
Значение диаметра: [число для отображения] (если нужно)
Значение хорды: [число для отображения] (если нужно)

Для прямоугольника:
Размеры: [ширина, высота]
Метки вершин: [A,B,C,D]
Стороны: [AB,BC] - какие стороны подписать
Показать диагонали: [true/false]
Длины диагоналей: [длина1, длина2]

Для параллелограмма:
Размеры: [ширина, высота]
Метки вершин: [A,B,C,D]
Стороны: [длина1, длина2, длина3, длина4]
Углы: [угол1, угол2] - смежные углы в градусах

Для трапеции:
Основания: [нижнее, верхнее]
Высота: [число]
Метки вершин: [A,B,C,D]
Боковые стороны: [длина1, длина2]
Углы: [угол1, угол2, угол3, угол4] - величины углов в градусах
Показать высоту: [true/false]
Значение высоты: [число для отображения]
Показать среднюю линию: [true/false]
Значение средней линии: [число для отображения]

Для координатной плоскости:
Точки: [(x1,y1,метка1), (x2,y2,метка2), ...]
Векторы: [(x1,y1,x2,y2,метка), ...] - координаты начала и конца, метка
"""
    
    # Основной промпт
    prompt = f"""
Вы - высококвалифицированный репетитор ЕГЭ по математике с многолетним опытом подготовки учащихся к успешной сдаче экзамена.

Создайте полный учебный материал - задачу, решение, подсказки для ЕГЭ по математике из категории "{category}" {"и подкатегории " + subcategory if subcategory else ""}.
### ПРИМЕРЫ ЗАДАЧИ В HTML или текстовом формате(МОЖЕТ ОТСУТСТВОВАТЬ) ###

---ЗАДАЧА ДЛЯ ПЕРЕРАБОТКИ---
{original_task}
---КОНЕЦ ИСХОДНЫХ ДАННЫХ---

### ТРЕБОВАНИЯ ###

МАТЕМАТИЧЕСКАЯ ТОЧНОСТЬ:
- Тщательно проверяйте все расчеты и математические формулировки
- Следите за корректностью использования математических терминов и обозначений
- Обеспечивайте однозначность условий и единственность решения (если не требуется обратное)
- Используйте стандартные математические обозначения, принятые в российском образовании

ТРЕБОВАНИЯ К ЗАДАЧАМ:
- Создавайте задачи, точно соответствующие категории и подкатегории в кодификаторе ЕГЭ
- Уровень сложности должен соответствовать формату ЕГЭ (не примитивный, но и не выходящий за рамки школьной программы российский школ)
- Предпочитайте задачи с "красивыми" числовыми ответами: целые числа, простые дроби (1/2, 3/4), 
  квадратные корни из целых чисел (√4, √9), тригонометрические значения в виде π/n
- Проверяйте условия на однозначность и отсутствие противоречий.

СТРУКТУРА РЕШЕНИЙ:
- Решение должно полностью соответствовать условию задачи
- Разбивайте решение на логические шаги с обоснованием
- Поясняйте каждое преобразование и вычисление
- Указывайте применяемые теоремы, формулы и правила
- Завершайте решение четким ответом в требуемом формате

ВАЖНО О СОХРАНЕНИИ ТИПА ЗАДАЧИ: Строго сохраняйте тип и основные элементы исходной задачи:
1. Если в исходной задаче есть модуль - новая задача ОБЯЗАТЕЛЬНО должна содержать модуль.
2. Если это логарифмическое уравнение - новая задача должна быть логарифмическим уравнением.
3. Если это задача на применение производной - сохраните этот контекст.
4. НЕ МЕНЯЙТЕ тип и ключевые элементы задачи, меняйте только числа и условия.
5. Сохраните уровень сложности и основную идею исходной задачи
6. Задача должна соответствовать уровню ЕГЭ, а не быть тривиальной
7. Создавайте задачи средней или высокой сложности, соответствующие кодификатору ЕГЭ.

Примеры правильного и неправильного сохранения типа задачи:
✓ Было: "Решите уравнение |2x - 3| = 5". Стало: "Решите уравнение |3x - 2| = 4".
✗ Было: "Решите уравнение |2x - 3| = 5". Стало: "Решите уравнение 3x - 2 = 4".
✓ Было: "Найдите наибольшее значение функции f(x) = x² + 6x + 2 на отрезке [-4; 0]". Стало: "Найдите наибольшее значение функции f(x) = x² + 4x + 3 на отрезке [-3; 1]".
✗ Было: "Найдите наибольшее значение функции". Стало: "Найдите точку экстремума функции".

Создайте новый вариант задачи, изменив числовые параметры, условия или сюжет, но сохраняя подобный уровень сложности и метод решения.

ВАЖНО О ЧИСЛАХ: Подбирайте числа так, чтобы получался "красивый" и удобный для ученика ответ:
1. Предпочтительны целые числа или простые дроби (1/2, 3/4, 2/3).
2. Избегайте громоздких выражений вида log₂(123 + √5445) + 2/5.
3. Корни лучше подбирать из квадратов целых чисел (√4, √9, √16).
4. Тригонометрические ответы по возможности выражайте через π (π/3, π/6, 3π/4).

Примеры хороших и плохих ответов:
✓ Хороший ответ: 5/2 или 2,5
✗ Плохой ответ: 103/41 или 2,512195...
✓ Хороший ответ: $\\sqrt{8} = 2 * \\sqrt{2}$
✗ Плохой ответ: $\\sqrt{38}$
✓ Хороший ответ: $\\pi/4$
✗ Плохой ответ: $0.785398...$

ВАЖНО: для форматирования используйте HTML теги вместо Markdown. Например:
- Для выделения жирным используйте <b>текст</b> вместо **текст**
- Для курсива используйте <i>текст</i> вместо *текст*
- Для переносов строк добавляйте <br> или <p>новый параграф</p>

ВАЖНО: текст решения должен быть содержательным и полным. Обязательно включите все шаги решения, не пропуская логические переходы. Без решения материал не имеет ценности.

ПРИНЦИПЫ РАЗРАБОТКИ ПОДСКАЗОК: выбран уровень подсказок {difficulty_level} - подсказки должны быть {hint_description}.
1. КОНКРЕТНОСТЬ: Каждая подсказка должна содержать специфическую информацию для конкретной задачи (числа, переменные, функции из условия)
2. ПРИРАЩЕНИЕ ИНФОРМАЦИИ: Каждая последующая подсказка должна содержать строго больше информации, чем предыдущая
3. СИСТЕМНОСТЬ: Подсказки должны формировать единую логическую цепочку, ведущую к решению
4. ИНИЦИИРОВАНИЕ МЫШЛЕНИЯ: Подсказки должны стимулировать самостоятельное мышление, а не просто давать готовые решения

ИЗБЕГАЙТЕ:
- Общих фраз без привязки к конкретным элементам задачи
- Повторения одной и той же информации в разных подсказках
- Слишком резких переходов между уровнями сложности подсказок
- Избыточного раскрытия решения на ранних уровнях подсказок

Для математических формул продолжайте использовать LaTeX между символами $ для простых формул или $$ для сложных.

Ваш ответ должен строго соответствовать следующему формату:
---ЗАДАЧА---
[Текст новой задачи]

---РЕШЕНИЕ---
[Полное пошаговое решение с пояснениями]
В конце решения обязательно запишите итоговый ответ в формате:
Ответ: [ответ] (с формулами в LaTeX)

{hint_instructions}
{image_prompt}"""

    return prompt

# Промпт для генерации новой задачи для локальной модели
def create_new_task_prompt(original_task, original_solution, category, subcategory=""):
    """
    Создает промпт для генерации новой задачи на основе оригинальной.
    
    Args:
        original_task: Текст оригинальной задачи
        original_solution: Решение оригинальной задачи
        category: Категория задачи
        subcategory: Подкатегория задачи (опционально)
        
    Returns:
        str: Промпт для генерации
    """
    return f"""
Сгенерируй новую математическую задачу из ЕГЭ по категории "{category}" 
{"и подкатегории " + subcategory if subcategory else ""}, похожую на данную:

Исходная задача: {original_task}

Исходное решение: {original_solution}

ВАЖНО: Строго сохраняй тип и основные элементы исходной задачи:
1. Если в исходной задаче есть модуль - новая задача ОБЯЗАТЕЛЬНО должна содержать модуль.
2. Если это логарифмическое уравнение - новая задача должна быть логарифмическим уравнением.
3. Если это задача на применение производной - сохрани этот контекст.
4. НЕ МЕНЯЙ тип и ключевые элементы задачи, меняй только числа и условия.

Примеры правильной замены:
✓ Было: "Решите уравнение log₃(x+2) + log₃(x-1) = 1". Стало: "Решите уравнение log₂(x+3) + log₂(x-2) = 2".
✓ Было: "Найдите площадь фигуры, ограниченной графиком функции y = x² - 4 и осью Ox". Стало: "Найдите площадь фигуры, ограниченной графиком функции y = x² - 9 и осью Ox".

ВАЖНО О ЧИСЛАХ: Подбирай числа так, чтобы получался "красивый" и удобный для ученика ответ:
1. Предпочтительны целые числа или простые дроби (1/2, 3/4, 2/3).
2. Избегай громоздких выражений вида log₂(123 + √5445) + 2/5.
3. Корни лучше подбирать из квадратов целых чисел (√4, √9, √16).
4. Тригонометрические ответы по возможности выражай через π (π/3, π/6, 3π/4).

Примеры:
✓ Хороший ответ: 7
✗ Плохой ответ: 7,42856...
✓ Хороший ответ: π/6
✗ Плохой ответ: 0,5236...

Создай новый вариант этой задачи, изменив числовые параметры, условия или сюжет, 
но сохраняя подобный уровень сложности и метод решения. 
Убедись, что задача имеет корректное решение(не допускай ответ "нет решений") и выполнима.
Математические формулы запиши в формате LaTeX между символами $$...$$

Новая задача:
"""

#############################################################
# 3. ГЕНЕРАЦИЯ РЕШЕНИЙ
#############################################################

# Промпт для генерации решения
def create_solution_prompt(task):
    """
    Создает промпт для генерации решения задачи.
    
    Args:
        task: Текст задачи
        
    Returns:
        str: Промпт для генерации
    """
    return f"""
Решите следующую математическую задачу из ЕГЭ:

{task}

ВАЖНО О РЕШЕНИИ:
1. Предоставьте полное пошаговое решение с пояснениями.
2. Разделите решение на логические этапы.
3. Объясняйте каждый шаг, особенно при применении формул и теорем.

Пример хорошего решения для задачи "Решите уравнение log₂(x+3) - log₂(x-2) = 3":
"Шаг 1: Используем свойство разности логарифмов: log₂(x+3) - log₂(x-2) = log₂((x+3)/(x-2)).
Шаг 2: Подставляем в исходное уравнение: log₂((x+3)/(x-2)) = 3.
Шаг 3: Переходим от логарифма к степени: (x+3)/(x-2) = 2³ = 8.
Шаг 4: Умножаем обе части на (x-2): x+3 = 8(x-2).
Шаг 5: Раскрываем скобки: x+3 = 8x-16.
Шаг 6: Приводим подобные: x+3-8x+16 = 0; -7x+19 = 0.
Шаг 7: Выражаем x: -7x = -19; x = 19/7 ≈ 2,71.
Шаг 8: Проверяем ОДЗ: x-2 > 0, то есть x > 2. Наше решение удовлетворяет ОДЗ."

ВАЖНО О ЧИСЛАХ: Стремитесь к красивым и понятным ответам:
1. Предпочтительны целые числа или простые дроби (1/2, 3/4, 2/3).
2. По возможности упрощайте корни (√8 → 2√2).
3. Тригонометрические ответы лучше выражать через π (π/3, π/6).
4. Логарифмы в ответах по возможности вычисляйте до целых или простых дробей.

Примеры упрощения:
✓ √12 = 2√3 (упрощено)
✗ √12 = 3,464... (не упрощено)
✓ log₂(8) = 3 (вычислено)
✗ log₂(8) (не вычислено)
✓ sin(π/6) = 1/2 (вычислено)
✗ sin(π/6) ≈ 0,5 (неточно вычислено)

Математические формулы запишите в формате LaTeX между символами $$...$$
В конце обязательно укажите итоговый ответ в наиболее упрощенной форме.

Решение:
"""

#############################################################
# 4. ГЕНЕРАЦИЯ ПОДСКАЗОК
#############################################################

# Словарь с готовыми инструкциями для подсказок разных уровней
HINT_PROMPTS = {
    0: """
---ПОДСКАЗКИ---
1. Для данного уровня подсказки не предусмотрены.
2. Для данного уровня подсказки не предусмотрены.
3. Для данного уровня подсказки не предусмотрены.
""",
    1: """
---ПОДСКАЗКИ---
[Уровень 1: Направляющие подсказки.
Первая подсказка должна обращать внимание на ключевой элемент условия задачи, но НЕ указывать метод решения. Используйте фразы вроде "Обратите внимание на...", "Важно заметить, что...", "Ключевой момент задачи...". Длина: 1-2 предложения.

Вторая подсказка должна содержать одну основную формулу или свойство, необходимое для начала решения. Упомяните ТОЛЬКО самое основное без объяснения как это применять. Длина: 1-2 предложения.

Третья подсказка должна содержать очень краткий намёк на первый шаг решения, без раскрытия всего плана. Используйте фразы вроде "Попробуйте начать с...", "Хорошей отправной точкой будет...". Длина: 1-2 предложения.]

1. Обратите внимание, что в уравнении $|3x - 5| = 7$ нужно рассмотреть два случая в зависимости от знака выражения под модулем.

2. Напомню, что модуль числа определяется как $|a| = a$ при $a \geq 0$ и $|a| = -a$ при $a < 0$.

3. Для решения сначала определите, при каких значениях $x$ выражение $3x - 5$ положительно или равно нулю, а при каких отрицательно.
""",
    2: """
---ПОДСКАЗКИ---
[Уровень 2: Вспомогательные подсказки.
Первая подсказка должна чётко сформулировать суть задачи и обратить внимание на 1-2 ключевых момента условия. Используйте доступный язык и конкретные термины из условия. Длина: 2-3 предложения.

Вторая подсказка должна содержать основные формулы или свойства для решения с минимальным пояснением их связи с задачей. Можно добавить короткую фразу о том, как они применяются, но без конкретных шагов. Длина: 2-3 предложения.

Третья подсказка должна содержать структурированный план первых двух шагов решения без подробных вычислений. Используйте числа из задачи, но оставьте самостоятельное выполнение действий ученику. Длина: 3-4 предложения.]

1. В данной задаче нужно найти все корни уравнения $\sqrt{4x+3} - \sqrt{x-1} = 2$. Обратите внимание, что выражения под корнями должны быть неотрицательными, что даёт ограничения на возможные значения $x$.

2. При решении уравнений с корнями полезно избавиться от иррациональности. Можно перенести один из корней в правую часть и возвести обе части в квадрат. Однако помните, что такое преобразование может привести к появлению посторонних корней.

3. Начните с определения области допустимых значений: $4x+3 \geq 0$ и $x-1 \geq 0$. Затем перенесите $\sqrt{x-1}$ вправо: $\sqrt{4x+3} = 2 + \sqrt{x-1}$. Возведите обе части в квадрат и преобразуйте полученное выражение.
""",
    3: """
---ПОДСКАЗКИ---
[Уровень 3: Содержательные подсказки.
Первая подсказка должна дать полное понимание условия задачи, чётко указывая на все важные ограничения и особенности. Используйте структурированное объяснение с нумерацией ключевых моментов. Длина: 3-4 предложения.

Вторая подсказка должна содержать все необходимые формулы, свойства и методы с кратким объяснением их применения к данной задаче. Можно включить простой пример или аналогию для лучшего понимания. Длина: 4-5 предложений.

Третья подсказка должна предоставлять план решения задачи с указанием основных шагов и некоторыми промежуточными результатами. Укажите 3-4 конкретных шага с частичными вычислениями, но оставьте финальные расчёты ученику. Длина: 5-6 предложений.]

1. В логарифмическом уравнении $\log_{3}(x+4) + \log_{3}(x-1) = 2$ необходимо найти все его корни. Важно помнить, что: 1) логарифмы определены только для положительных чисел, поэтому $x+4 > 0$ и $x-1 > 0$; 2) основание логарифма равно 3, а сумма логарифмов равна 2; 3) левая часть представляет собой сумму логарифмов с одинаковым основанием.

2. Для решения такого уравнения можно использовать свойство суммы логарифмов: $\log_a(m) + \log_a(n) = \log_a(m \cdot n)$. Применив это свойство, получим $\log_3((x+4)(x-1)) = 2$. Далее используем определение логарифма: если $\log_a(b) = c$, то $b = a^c$. В нашем случае это означает, что произведение $(x+4)(x-1)$ должно равняться $3^2 = 9$.

3. Решим уравнение пошагово:
   - Шаг 1: Определяем ОДЗ: $x-1 > 0$, т.е. $x > 1$.
   - Шаг 2: Применяем свойство суммы логарифмов: $\log_3((x+4)(x-1)) = 2$.
   - Шаг 3: Переходим от логарифма к степени: $(x+4)(x-1) = 3^2 = 9$.
   - Шаг 4: А далее раскрываем скобки и считаем ответ.
   Теперь вам осталось решить это квадратное уравнение и проверить корни на принадлежность ОДЗ.
""",
    4: """
---ПОДСКАЗКИ---
[Уровень 4: Подробные подсказки.
Первая подсказка должна содержать исчерпывающий анализ условия задачи с указанием всех нюансов, возможных подходов и ограничений. Разделите анализ на 3-4 логических пункта. Включите визуальный образ или аналогию, если это поможет понять задачу. Длина: 4-6 предложений.

Вторая подсказка должна предоставлять детальную теоретическую базу с объяснением всех необходимых формул и методов. Для каждого метода кратко укажите, как он применяется к данной задаче. Структурируйте информацию по пунктам. Длина: 6-8 предложений.

Третья подсказка должна содержать подробное решение задачи с большинством вычислений, но без финального ответа. Разбейте решение на этапы, для каждого приведите промежуточные вычисления. Укажите потенциальные трудности и способы их преодоления. Оставьте последнее действие или проверку ученику. Длина: 8-10 предложений.]

1. В тригонометрическом уравнении $2\sin^2 x - 3\sin x + 1 = 0$ требуется найти все решения на отрезке $[0; 2\pi]$. Разберёмся в задаче: 1) это квадратное уравнение относительно $\sin x$, а не самого $x$; 2) после нахождения значений $\sin x$ нужно будет найти соответствующие значения $x$ на указанном отрезке; 3) для каждого значения $\sin x$ может существовать несколько значений $x$ на отрезке $[0; 2\pi]$, т.к. синус – периодическая функция; 4) поскольку $|\sin x| \leq 1$, не все возможные значения переменной могут подойти.

2. Для решения этого уравнения применим следующие теоретические положения:
   - Метод замены переменной: если обозначить $\sin x = t$, то уравнение примет вид $2t^2 - 3t + 1 = 0$.
   - Формула дискриминанта квадратного уравнения: $D = b^2 - 4ac$, где $a=2$, $b=-3$, $c=1$.
   - Формула корней квадратного уравнения: $t = \frac{-b \pm \sqrt{D}}{2a}$.
   - Формулы для нахождения всех значений $x$ на отрезке $[0; 2\pi]$, при которых $\sin x = t$:
     * Если $t \in [-1, 1]$, то $x = \arcsin t + 2\pi n$ или $x = \pi - \arcsin t + 2\pi n$, где $n$ - целое число.
     * Для отрезка $[0; 2\pi]$ значение $n$ может быть только 0.

3. Решим уравнение $2\sin^2 x - 3\sin x + 1 = 0$ на отрезке $[0; 2\pi]$:
   - Шаг 1: Сделаем замену $\sin x = t$ и решим квадратное уравнение $2t^2 - 3t + 1 = 0$.
     Находим дискриминант: $D = (-3)^2 - 4 \cdot 2 \cdot 1 = 9 - 8 = 1$.
     Корни: $t_1 = \frac{3 + 1}{4} = 1$ и $t_2 = \frac{3 - 1}{4} = \frac{1}{2}$.
   - Шаг 2: Проверяем, что $t_1 = 1$ и $t_2 = \frac{1}{2}$ удовлетворяют условию $|t| \leq 1$.
   - Шаг 3: Находим все значения $x$ на отрезке $[0; 2\pi]$, при которых $\sin x = 1$:
     При $\sin x = 1$ получаем $x = \frac{\pi}{2} + 2\pi n$. На отрезке $[0; 2\pi]$ это только $x = \frac{\pi}{2}$.
   - Шаг 4: Находим все значения $x$ на отрезке $[0; 2\pi]$, при которых $\sin x = \frac{1}{2}$:
     При $\sin x = \frac{1}{2}$ получаем $x = \frac{\pi}{6} + 2\pi n$ или $x = \pi - \frac{\pi}{6} + 2\pi n = \frac{5\pi}{6} + 2\pi n$.
     На отрезке $[0; 2\pi]$ это $x = \frac{\pi}{6}$, $x = \frac{5\pi}{6}$, $x = \frac{\pi}{6} + 2\pi = \frac{13\pi}{6}$ и $x = \frac{5\pi}{6} + 2\pi = \frac{17\pi}{6}$.
   
   Теперь нужно определить, какие из этих значений действительно являются корнями исходного уравнения. Подставьте их в исходное уравнение для проверки.
""",
    5: """
---ПОДСКАЗКИ---
[Уровень 5: Детальный разбор.
Первая подсказка должна представлять всесторонний анализ задачи, включающий все возможные интерпретации, нюансы и особенности. Разбейте анализ на 4-5 чётких пунктов с пояснениями. Включите наглядный пример или аналогию для лучшего понимания. Длина: 6-8 предложений.

Вторая подсказка должна содержать исчерпывающую теоретическую базу с объяснением всех формул, их происхождения и применимости к задаче. Для каждого метода дайте чёткое пояснение как и почему он работает. Структурируйте материал по параграфам с нумерацией ключевых положений. Длина: 8-10 предложений.

Третья подсказка должна представлять собой практически полное решение с подробными пошаговыми вычислениями, анализом всех вариантов и проверкой результатов. Разбейте решение на пронумерованные этапы с промежуточными результатами и пояснениями. Оставьте лишь минимальную работу ученику (финальное округление, подстановку или запись ответа). Включите проверку полученного результата. Длина: 10-12 предложений.]

1. В задаче по теории вероятностей требуется найти вероятность того, что при 5 бросках монеты выпадет ровно 3 орла. Проанализируем условие задачи: 1) мы имеем дело с последовательностью испытаний Бернулли (бросок монеты), где каждое испытание имеет два исхода – орёл или решка; 2) испытания являются независимыми, т.е. результат одного броска не влияет на результаты других; 3) вероятность выпадения орла в каждом испытании равна 0,5, т.е. p = 0,5; 4) нас интересует конкретное количество успехов – ровно 3 орла из 5 бросков; 5) эта задача похожа на ситуацию, когда мы считаем вероятность получить определённое количество правильных ответов при случайном выборе вариантов в тесте.

2. Для решения этой задачи применяются следующие теоретические положения:
   
   1) Схема испытаний Бернулли: серия независимых испытаний с двумя возможными исходами (успех/неудача), где вероятность успеха p постоянна.
   
   2) Формула Бернулли для вероятности ровно k успехов в n испытаниях: 
      P(k) = C(n,k) * p^k * (1-p)^(n-k), где:
      - C(n,k) – число сочетаний из n по k, показывающее количество способов выбрать k позиций из n;
      - p^k – вероятность успеха в выбранных k испытаниях;
      - (1-p)^(n-k) – вероятность неудачи в оставшихся (n-k) испытаниях.
   
   3) Формула для вычисления числа сочетаний: 
      C(n,k) = n!/(k!*(n-k)!), где n! – факториал числа n (произведение всех целых чисел от 1 до n).
   
   4) В нашем случае: n = 5 (всего бросков), k = 3 (желаемое число орлов), p = 0,5 (вероятность выпадения орла).

3. Найдём вероятность выпадения ровно 3 орлов при 5 бросках монеты:

   Шаг 1: Вычислим число сочетаний C(5,3):
   C(5,3) = 5!/(3!*2!) = (5*4*3*2*1)/((3*2*1)*(2*1)) = 120/(6*2) = 120/12 = 10.
   
   Шаг 2: Подставим все значения в формулу Бернулли:
   P(3) = C(5,3) * p^3 * (1-p)^(5-3) = 10 * (0,5)^3 * (0,5)^2.
   
   Шаг 3: Вычислим вероятность:
   P(3) = 10 * (0,5)^3 * (0,5)^2 = 10 * (0,5)^5 = 10 * (1/32) = 10/32 = 5/16 = 0,3125.
   
   Шаг 4: Проверим результат другим методом. Мы можем использовать свойство биномиального распределения, согласно которому вероятность количества успехов симметрична относительно среднего значения np = 5*0,5 = 2,5 при p = 0,5. Это означает, что P(3) = P(2) для p = 0,5. Действительно, C(5,2) = 10, и P(2) = 10 * (0,5)^2 * (0,5)^3 = 10 * (0,5)^5 = 10/32 = 5/16 = 0,3125.
   
   Таким образом, вероятность выпадения ровно 3 орлов при 5 бросках монеты равна 5/16 или 0,3125 (31,25%).
"""
}

# Промпт для генерации подсказок
def create_hints_prompt(task, solution, difficulty_level=3):
    """
    Создает промпт для генерации подсказок.
    
    Args:
        task: Текст задачи
        solution: Полное решение задачи
        difficulty_level: Уровень сложности подсказок (1-5)
        
    Returns:
        str: Промпт для генерации
    """
    # Преобразуем уровень сложности в описание для промпта
    hint_description = {
        1: "минимальные подсказки, но всё равно относящиеся к конкретной задаче",
        2: "краткие подсказки с указанием конкретного метода для этой задачи",
        3: "подробные подсказки среднего уровня с указанием формул и начальных шагов конкретно для этой задачи (3-5 предложений)",
        4: "развернутые подсказки с конкретными вычислениями и значениями из задачи (4-6 предложений)",
        5: "максимально подробное пошаговое решение из нескольких абзацев, практически полностью раскрывающее ответ"
    }.get(difficulty_level, "средние подсказки")

    return f"""
Создайте 3 последовательные подсказки для решения конкретной математической задачи ЕГЭ:

Задача: {task}

Полное решение: {solution}

Уровень подсказок: {difficulty_level} (по шкале от 1 до 5)

ВАЖНО: Избегайте общих рекомендаций! Используйте КОНКРЕТНЫЕ элементы из задачи (числа, переменные, функции). 
НЕ ДАВАЙТЕ подсказки вида "подумайте о применении теоремы Виета" или "используйте метод интервалов" - вместо этого привязывайте подсказки к конкретным данным задачи!

Требуется создать {hint_description}.
Чем выше число (от 1 до 5), тем более подробными должны быть подсказки:
- Уровень 1: минимальные подсказки, но с упоминанием конкретных значений из задачи
  Пример: "Обратите внимание, что коэффиценты *числителя слева* и *знаменателя справа* совпадают в уравнении" вместо "Посмотрите на коэффициенты в уравнении"
- Уровень 3: подробные подсказки из 3-5 предложений с конкретными шагами
- Уровень 5: почти полное решение с конкретными вычислениями, разбитое на несколько абзацев

ВАЖНО О КОЛИЧЕСТВЕ ТЕКСТА:
- Для уровней 1-2: короткие подсказки из 1-2 предложений 
- Для уровней 3-4: развернутые подсказки из 3-6 предложений
- Для уровня 5: полноценные абзацы с подробными объяснениями и вычислениями

Примеры ХОРОШИХ подсказок для задачи "$x^2 - 5x + 6 = 0$":
- Уровень 1: "Обратите внимание, что коэффициенты уравнения $x^2 - 5x + 6 = 0$ позволяют разложить левую часть на множители" (конкретная задача и намек)
- Уровень 3: "Для уравнения $x^2 - 5x + 6 = 0$ найдите корни. Используя теорему Виета, получаем, что их сумма равна 5, а произведение равно 6. Эти корни можно подобрать, перебирая числа, произведение которых равно 6, а сумма равна 5. Попробуйте числа 2 и 3, их произведение $2 \cdot 3 = 6$, а сумма $2 + 3 = 5$." (формулы и начальные шаги с детальным объяснением)
- Уровень 5: "Шаг 1: Разложим квадратный трехчлен $x^2 - 5x + 6$ на множители. Найдем числа, сумма которых равна -5, а произведение равно 6. Это числа -2 и -3. 
  
  Шаг 2: Запишем разложение трехчлена: $x^2 - 5x + 6 = (x - 2)(x - 3) = 0$. 
  
  Шаг 3: Отсюда получаем систему $x - 2 = 0$ или $x - 3 = 0$, значит $x = 2$ или $x = 3$. Проверим оба корня подстановкой в исходное уравнение..." (детальные шаги с разбивкой на абзацы)

Подсказки должны создавать последовательную цепочку, раскрывая ход решения:
1. Первая подсказка: выделение ключевых элементов условия задачи, чтобы любой школьник мог правильно понять условие задачи, а также начальное наблюдение или первый шаг, привязанный к конкретным элементам задачи
2. Вторая подсказка: существенное продвижение в решении с формулами и конкретными значениями
3. Третья подсказка: предпоследний шаг решения, оставляющий ученику минимальную работу

Подсказки (разделенные ###):
"""

def check_visualization_requirement(category, subcategory):
    """Enhanced function to detect when visualization is needed"""
    
    # Categories that always require visualization
    visualization_categories = {
        # Geometry categories
        "Векторы", "Планиметрия", "Стереометрия", "Планиметрическая задача",
        "Многоконфигурационная планиметрическая задача", "Сложная планиметрия",
        "Стереометрическая задача", "Квадратная решётка, координатная плоскость",
        "Геометрия", "Треугольники", "Окружности", "Многоугольники", "Фигуры на плоскости",
        
        # Graph categories 
        "Графики функций", "Чтение графиков и диаграмм", "Производная и первообразная",
        
        # Additional categories that might need visualization
        "Задача с параметром", "Наибольшее и наименьшее значение функций"
    }
    
    # Подкатегории, требующие визуализации
    visualization_subcategories = {
        "планиметрия", "стереометрия", "треугольник", "окружность", 
        "параллелограмм", "трапеция", "многоугольник", "векторы",
        "координатная плоскость", "график функции", "квадрат", "прямоугольник",
        "геометрия", "конус", "пирамида", "цилиндр", "шар", "призма"
    }
    
    # Проверяем наличие категории в списке категорий, требующих визуализацию
    for viz_category in visualization_categories:
        if viz_category.lower() in category.lower():
            return True
    
    # Проверяем наличие подкатегории в списке подкатегорий, требующих визуализацию
    if subcategory:
        for viz_subcategory in visualization_subcategories:
            if viz_subcategory.lower() in subcategory.lower():
                return True
    
    # Проверяем точное совпадение для некоторых важных категорий 
    if category.lower() == "планиметрия" or category.lower() == "стереометрия":
        return True
    
    return False


#############################################################
# 5. ВИЗУАЛИЗАЦИЯ И ДРУГИЕ ФУНКЦИИ
#############################################################

# Параметры по умолчанию для фигур
DEFAULT_VISUALIZATION_PARAMS = {
    "triangle": {
        "points": [(0,0), (4,0), (2,3)],
        "show_labels": True,
        "vertex_labels": ["A", "B", "C"],
        "sides": None,  # Длины сторон для отображения
        "angles": None,  # Значения углов в градусах
        "show_heights": False,
        "show_medians": False,
        "show_midlines": False,
        "is_right": False
    },
    "rectangle": {
        "x": 0,
        "y": 0,
        "width": 4,
        "height": 3,
        "show_labels": True,
        "vertex_labels": ["A", "B", "C", "D"],
        "sides": None,  # Какие стороны подписать
        "show_lengths": False,
        "show_angles": False,
        "show_diagonals": False,  # Показывать диагонали
        "diagonals_length": None  # Длины диагоналей
    },
    "parallelogram": {
        "x": 0,
        "y": 0,
        "width": 4,
        "height": 3,
        "skew": 60,
        "show_labels": True,
        "vertex_labels": ["A", "B", "C", "D"],
        "sides": None,  # Длины сторон
        "angles": None,  # Значения углов в градусах
        "show_lengths": False,
        "show_angles": False,
        "show_diagonals": False  # Показывать диагонали
    },
    "trapezoid": {
        "x": 0,
        "y": 0,
        "bases": [6, 3],  # [нижнее, верхнее]
        "height": 3,
        "show_labels": True,
        "vertex_labels": ["A", "B", "C", "D"],
        "sides": [3.6, 3.6],  # Длины боковых сторон [левая, правая]
        "angles": None,  # Величины углов в градусах
        "show_lengths": False,
        "show_angles": False,
        "show_height": False,  # Показать высоту трапеции
        "height_value": None,  # Числовое значение высоты для отображения
        "show_midline": False,  # Показать среднюю линию
        "midline_value": None  # Значение средней линии для отображения
    },
    "circle": {
        "center": (0, 0),
        "radius": 3,
        "center_label": "O",
        "show_center": True,
        "show_radius": False,
        "show_diameter": False,
        "show_chord": False,
        "radius_value": None,  # Значение радиуса для отображения
        "diameter_value": None,  # Значение диаметра для отображения
        "chord_value": None,  # Значение хорды для отображения
        "show_central_angles": False,
        "central_angle_value": None,  # Значение центрального угла в градусах
        "show_inscribed_angles": False,
        "inscribed_angle_value": None,  # Значение вписанного угла в градусах
        "show_tangent": False,
        "tangent_point": None  # Точка касания
    },
    "graph": {
        "num_functions": 1,
        "function_1": "x**2",
        "color_1": "blue",
        "name_1": "f(x)",
        "function_2": None,
        "color_2": "red",
        "name_2": "g(x)",
        "function_3": None,
        "color_3": "green",
        "name_3": "h(x)",
        "function_4": None,
        "color_4": "orange",
        "name_4": "k(x)",
        "x_range": [-10, 10],
        "y_range": None,  # Автоматический диапазон
        "special_points": []  # Список особых точек [(x1,y1,метка1), ...]
    },
    "coordinate": {
        "points": [],  # Список точек [(x1,y1,метка1), ...]
        "vectors": [],  # Список векторов [(x1,y1,x2,y2,метка), ...]
        "functions": []  # Список функций для отображения
    }
}

# Шаблоны регулярных выражений для извлечения параметров из текста
REGEX_PATTERNS = {
    "generic": {
        "type": r'Тип[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "shape_type": r'Тип[^:]*:\s*["\']?([^"\'\n]+)["\']?', 
    },
    "triangle": {
        "vertex_labels": r'Метки вершин[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "sides": r'Стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angles": r'Углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_heights": r'Показать высоты[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_medians": r'Показать медианы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_midlines": r'Показать средние линии[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "is_right": r'Прямоугольный[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "coords": r'Координаты вершин[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_labels": r'Показать метки[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "rectangle": {
        "dimensions": r'Размеры[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "vertex_labels": r'Метки вершин[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "sides": r'Стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "coords": r'Координаты[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_dimensions": r'Показать размеры[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_labels": r'Показать метки[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "side_lengths": r'Длины сторон[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_angles": r'Показать углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angle_values": r'Значения углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_lengths": r'Показать стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_diagonals": r'Показать диагонали[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "diagonals_length": r'Длины диагоналей[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "parallelogram": {
        "dimensions": r'Размеры[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "vertex_labels": r'Метки вершин[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "sides": r'Стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angles": r'Углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "coords": r'Координаты[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_labels": r'Показать метки[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "skew_angle": r'Наклон[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_angles": r'Показать углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angle_values": r'Значения углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_lengths": r'Показать стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_diagonals": r'Показать диагонали[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "diagonals_length": r'Длины диагоналей[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "trapezoid": {
        "bases": r'Основания[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "height": r'Высота[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "vertex_labels": r'Метки вершин[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "sides": r'Боковые стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angles": r'Углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "coords": r'Координаты[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_labels": r'Показать метки[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_angles": r'Показать углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "angle_values": r'Значения углов[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_lengths": r'Показать стороны[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_height": r'Показать высоту[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "height_value": r'Значение высоты[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_midline": r'Показать среднюю линию[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "midline_value": r'Значение средней линии[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "circle": {
        "radius": r'Радиус[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "center": r'Центр[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "center_label": r'Метка центра[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_radius": r'Показать радиус[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_diameter": r'Показать диаметр[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_chord": r'Показать хорду[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "radius_value": r'Значение радиуса[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "diameter_value": r'Значение диаметра[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "chord_value": r'Значение хорды[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_center": r'Показать центр[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_central_angles": r'Показать центральные углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "central_angle_value": r'Значение центрального угла[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_inscribed_angles": r'Показать вписанные углы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "inscribed_angle_value": r'Значение вписанного угла[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "show_tangent": r'Показать касательную[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "tangent_point": r'Точка касания[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "graph": {
        "num_functions": r'Количество функций[^:]*:\s*["\']?(\d+)["\']?',
        "function_1": r'Функция 1[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "color_1": r'Цвет 1[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "name_1": r'Название 1[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "function_2": r'Функция 2[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "color_2": r'Цвет 2[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "name_2": r'Название 2[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "function_3": r'Функция 3[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "color_3": r'Цвет 3[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "name_3": r'Название 3[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "function_4": r'Функция 4[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "color_4": r'Цвет 4[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "name_4": r'Название 4[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "x_range": r'Диапазон X[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "y_range": r'Диапазон Y[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "special_points": r'Особые точки[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    },
    "coordinate": {
        "points": r'Точки[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "vectors": r'Векторы[^:]*:\s*["\']?([^"\'\n]+)["\']?',
        "functions": r'Функции[^:]*:\s*["\']?([^"\'\n]+)["\']?'
    }
}   